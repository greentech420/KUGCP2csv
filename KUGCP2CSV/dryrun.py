from google.cloud import bigquery

queris = {
    "MDV_ADMIT":"""
SELECT
 ROW_ID,
 a.PT_ID,
 INHOSP_DATE,
 DISCHARGE_DATE,
 SECTION
FROM
    `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_ADMIT` a
    INNER JOIN ( 
        SELECT distinct PT_ID from `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_DISEASE`
        WHERE ICD10_CD_1 >= 'C000' AND ICD10_CD_1 <= 'D489'
    ) pid ON pid.PT_ID = a.PT_ID
WHERE INHOSP_DATE >= CURRENT_DATE()
""",
    "MDV_ADMIT_RESERVATION":"""
SELECT
 ROW_ID,
 a.PT_ID,
 RESERVATION_REQUEST_DATE,
 SECTION,
 OWNER_ID
FROM
    `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_ADMIT_RESERVATION` a
    INNER JOIN ( 
        SELECT distinct PT_ID from `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_DISEASE`
        WHERE ICD10_CD_1 >= 'C000' AND ICD10_CD_1 <= 'D489'
    ) pid ON pid.PT_ID = a.PT_ID
WHERE RESERVATION_REQUEST_DATE >= CURRENT_DATE()
""",
    "MDV_BOOK":"""
SELECT
 ROW_ID,
 b.PT_ID,
 BOOK_DATE,
 '外来' AS EXAM_CLASS,
 SECTION,
 GROUP_CD
FROM
    `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_BOOK` b
    INNER JOIN ( 
        SELECT distinct PT_ID FROM `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_DISEASE`
        WHERE ICD10_CD_1 >= 'C000' AND ICD10_CD_1 <= 'D489'
    ) pid ON pid.PT_ID = b.PT_ID 
WHERE BOOK_DATE >= CURRENT_DATE()
""",
    "MDV_DISEASE":"""
SELECT
  ROW_ID
  ,ETL_DATE
  ,ETL_TIME
  ,d.PT_ID
  ,ICD10_CD_1
  ,DISEASE
  ,DISEASE_START_DATE
  ,OUTCOME_DATE
FROM
    `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_DISEASE` d 
    INNER JOIN ( 
        SELECT distinct PT_ID from `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_DISEASE`
        WHERE ICD10_CD_1 >= 'C000' AND ICD10_CD_1 <= 'D489'
    ) pid 
        ON pid.PT_ID = d.PT_ID 
WHERE ICD10_CD_1 != ''
""",
    "MDV_DRUG":"""
SELECT d.ROW_ID
 ,d.PT_ID
 ,d.TAKING_START_DATE
 ,d.TAKING_END_DATE
 ,d.DRUG
 ,d.COMPONENT_NAME
 ,d.DRUG_CD
 ,CASE
    WHEN d.IN_OUT_HOSP LIKE '%院外%' THEN '院外処方'
    ELSE '院内処方' END AS IN_OUT_HOSP
 ,d.ORDER_DOSE
 ,d.USAGE
 ,d.DRAG_TYPE
 ,d.ORDER_UNIT
 ,d.OWNER_ID
FROM MDV_MAIN.MDV_DRUG d
    INNER JOIN ( 
        SELECT distinct PT_ID from `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_DISEASE`
        WHERE ICD10_CD_1 >= 'C000' AND ICD10_CD_1 <= 'D489'
    ) pid 
        ON pid.PT_ID = d.PT_ID
WHERE d.UPDATE_DATE >= DATE_SUB(CURRENT_DATE(),INTERVAL 5 YEAR)
""",
    "MDV_INJECTION":"""
SELECT i.ROW_ID
 ,i.PT_ID
 ,i.PLAN_START_DATE
 ,i.EXEC_END_DATE
 ,i.INJ_DRUG
 ,i.COMPONENT_NAME
 ,i.INJ_DRUG_CD
 ,i.EXEC_DOSE
 ,i.INJ_METHOD_CONT
 ,i.INJ_DRUG
 ,i.EXEC_UNIT
 ,i.OWNER_ID
FROM MDV_MAIN.MDV_INJECTION i
    INNER JOIN ( 
        SELECT distinct PT_ID from `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_DISEASE`
        WHERE ICD10_CD_1 >= 'C000' AND ICD10_CD_1 <= 'D489'
    ) pid 
        ON pid.PT_ID = i.PT_ID
WHERE i.UPDATE_DATE >= DATE_SUB(CURRENT_DATE(),INTERVAL 5 YEAR)
""",
    "MDV_NSDB_GN":"""
SELECT a.ROW_ID,
 a.PT_ID,
 a.WEIGHT_DATE,
 a.WEIGHT_UNIT,
 CAST(ROUND(a.WEIGHT,2) AS STRING) AS WEIGHT
FROM `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_NSDB_GN` a
    INNER JOIN ( 
        SELECT distinct PT_ID FROM `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_DISEASE`
        WHERE ICD10_CD_1 >= 'C000' AND ICD10_CD_1 <= 'D489'
    ) pid 
        ON pid.PT_ID = a.PT_ID
WHERE WEIGHT > 1
""",
    "MDV_PTBASE":"""
SELECT	PT_ID
 ,PT_SEX
 ,PT_NAME
 ,PT_NAME_KANA_SEI
 ,PT_NAME_KANA_MEI
 ,PT_BIRTHDATE
 ,PT_MUNIC
 ,PT_PREF
 ,PT_ZIP
 ,INPUT_DATE
 ,UPDATE_DATE
FROM kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_PTBASE
""",
    "MDV_PTPROFILE":"""
SELECT a.PT_ID,
a.ETL_DATE,
a.REC_SUM,
a.ETL_TIME,
a.CASE_ID,
a.FACILITY_CD,
a.FACILITY,
a.PT_NUM,
a.CANCEL_DEF,
a.DEATH_FLG,
a.DEATH_DATE,
a.SMOKE_STS,
a.SMOKE_CNT,
a.UPDATE_DATE,
a.MS_WEIGHT_DATE,
CAST(ROUND(a.MS_WEIGHT,2) AS STRING) AS MS_WEIGHT
FROM `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_PTPROFILE` a
    INNER JOIN ( 
        SELECT distinct PT_ID FROM `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_DISEASE`
        WHERE ICD10_CD_1 >= 'C000' AND ICD10_CD_1 <= 'D489'
    ) pid 
        ON pid.PT_ID = a.PT_ID
WHERE MS_WEIGHT > 1
""",
    "MDV_SAMPLE_RSLT":"""
SELECT
 b.ROW_ID
 ,b.PT_ID
 ,a.INPUT_DATE
 ,b.QUERY_DATE
 ,b.REPORT_DATE
 ,CONCAT(LEFT(b.JLAC10_EXAM_CD,12),'***',RIGHT(b.JLAC10_EXAM_CD,2)) AS JLAC10_EXAM_CD
 ,b.RESULT_UNIT
 ,b.RESULT_NUM
 ,CASE
    WHEN b.RESULT_CHAR != '' THEN b.RESULT_CHAR
    ELSE SAFE_CAST(b.RESULT_NUM AS STRING) END AS RESULT
 ,CASE
    WHEN b.RESULT_CHAR != '' THEN b.LLN_CHAR
    ELSE SAFE_CAST(b.LLN_NUM AS STRING) END AS LLN
 ,CASE
    WHEN RESULT_CHAR != '' THEN b.ULN_CHAR
    ELSE SAFE_CAST(b.ULN_NUM AS STRING) END AS ULN
FROM `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_SAMPLE_RSLT` b
INNER JOIN `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_SAMPLE` a ON b.PARENT_ROW_ID =a.ROW_ID
INNER JOIN ( 
  SELECT distinct PT_ID FROM `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_DISEASE`
  WHERE ICD10_CD_1 >= 'C000' AND ICD10_CD_1 <= 'D489'
) pid ON pid.PT_ID = a.PT_ID

WHERE FORMAT_DATE('%Y/%m/%d',b.QUERY_DATE) BETWEEN FORMAT_DATE('%Y/%m/%d',DATE(DATE_SUB(CURRENT_DATE('Asia/Tokyo'),INTERVAL 1 MONTH)))
 AND FORMAT_DATE('%Y/%m/%d',DATE_SUB(date_trunc(CURRENT_DATE('Asia/Tokyo'),MONTH),INTERVAL 1 DAY))
 AND b.JLAC10_EXAM_CD != ''
 AND b.REPORT_DATE IS NOT NULL
 AND (CASE WHEN b.RESULT_CHAR != '' THEN b.RESULT_CHAR ELSE SAFE_CAST(b.RESULT_NUM AS STRING) END) != ''
""",
    "MDV_SOMATOMETRY":"""
SELECT a.ROW_ID,
 a.PT_ID,
 a.SOMA_DATE,
 CAST(ROUND(a.MS_WEIGHT,2) AS STRING) AS MS_WEIGHT
FROM `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_SOMATOMETRY` a
    INNER JOIN ( 
        SELECT distinct PT_ID FROM `kuhp-20210916-ibm-dwh.MDV_MAIN.MDV_DISEASE`
        WHERE ICD10_CD_1 >= 'C000' AND ICD10_CD_1 <= 'D489'
    ) pid 
        ON pid.PT_ID = a.PT_ID
WHERE MS_WEIGHT > 1
""",

}
job_config = bigquery.QueryJobConfig(dry_run=True, use_query_cache=False)
# Construct a BigQuery client object.
client = bigquery.Client()

for tbl in queris:

    # Start the query, passing in the extra configuration.
    query_job = client.query(queris[tbl],
      job_config=job_config,
    )  # Make an API request.

    # A dry run query completes immediately.
    print( tbl + "\t query will process \t{}\t bytes.".format(query_job.total_bytes_processed))

